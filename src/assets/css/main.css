@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*------------------------------------*    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/*------------------------------------*    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

html {
  min-height: 100%;
  min-width: 260px;
  overflow-y: scroll;
  font-family: Ubuntu, Fira Sans, Oxygen, Segoe UI, Roboto, Cantarell, Helvetica Neue, sans-serif;
  font-size: 16px;
  font-weight: normal;
  line-height: 1.5;
  color: #fff;
  background-color: #333; }

body {
  background: #333; }
  @media print {
    body * {
      display: none; }
    body::after {
      content: 'Please, do not waste paper by printing webpages.'; } }

::-webkit-input-placeholder {
  color: #69bfe8; }

::-moz-placeholder {
  color: #69bfe8; }

:-ms-input-placeholder {
  color: #69bfe8; }

::placeholder {
  color: #69bfe8; }

[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

button,
input,
select,
textarea {
  padding-top: 0.3rem;
  padding-bottom: 0.3rem;
  background-color: #fff;
  color: #333;
  outline: 0;
  border: 0; }

input {
  padding-left: 0.375rem;
  border-radius: 3px; }

[type=text],
[type=tel],
[type=email],
[type=search],
[type=number],
[type=password],
select,
textarea {
  width: 100%;
  padding: 0.375rem 0.75rem;
  border: 1px solid #666666;
  border-radius: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }
  [type=text]:hover, [type=text]:active, [type=text]:focus,
  [type=tel]:hover,
  [type=tel]:active,
  [type=tel]:focus,
  [type=email]:hover,
  [type=email]:active,
  [type=email]:focus,
  [type=search]:hover,
  [type=search]:active,
  [type=search]:focus,
  [type=number]:hover,
  [type=number]:active,
  [type=number]:focus,
  [type=password]:hover,
  [type=password]:active,
  [type=password]:focus,
  select:hover,
  select:active,
  select:focus,
  textarea:hover,
  textarea:active,
  textarea:focus {
    border-color: #69bfe8; }

textarea {
  resize: vertical; }

label {
  display: block;
  cursor: pointer; }

fieldset {
  border: 0; }

h1 {
  font-size: 2rem;
  color: #fae368; }
  @media screen and (min-width: 720px) {
    h1 {
      font-size: 2.25rem; } }

h2 {
  font-size: 1.125rem;
  color: #fae368;
  font-weight: 500; }
  @media screen and (min-width: 720px) {
    h2 {
      font-size: 1.25rem; } }

h3 {
  font-size: 1.125rem;
  color: #8fbfdc;
  font-weight: 600; }

h4 {
  font-size: 1.125rem;
  color: #8fbfdc;
  font-weight: 600; }

h5 {
  font-size: 1rem;
  color: #8fbfdc; }

h6 {
  font-size: 0.875rem;
  color: #fae368; }

a {
  color: #3cf;
  text-decoration: none; }
  a:hover, a:active, a:focus {
    color: #f3c; }

nav ul,
nav ol,
fieldset ul,
fieldset ol {
  list-style: none; }

ul {
  padding-left: 0;
  list-style: none; }

.list--links li {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem; }

.list--links .icon {
  margin-right: 0.375rem; }

.list--links--centered {
  margin-left: -16px;
  margin-top: 0.375rem; }

audio,
canvas,
img,
video {
  max-width: 100%;
  max-height: none;
  width: auto;
  height: auto; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

h2,
ul,
ol,
dl,
blockquote,
address,
hr,
table,
fieldset,
figure,
pre {
  margin-bottom: 1.5rem; }

h1,
section,
p {
  margin-bottom: 3rem; }

h3,
h4,
h5,
h6 {
  margin-bottom: 0.75rem; }

table {
  width: 100%; }

td {
  vertical-align: top; }

th {
  text-align: left; }

hr {
  display: block;
  height: 1px;
  padding: 0;
  border: 0;
  border-top: 1px solid #666666; }

cite {
  letter-spacing: .05em;
  font-style: italic;
  display: block; }

.intro {
  font-size: 1.125rem;
  line-height: 2; }
  @media screen and (min-width: 960px) {
    .intro {
      font-size: 24px; } }

::-moz-selection {
  background: #fff;
  color: #69bfe8;
  text-shadow: none; }

::selection {
  background: #fff;
  color: #69bfe8;
  text-shadow: none; }

p::-moz-selection,
span::-moz-selection,
strong::-moz-selection,
a::-moz-selection {
  background: #f3c; }

p::selection,
span::selection,
strong::selection,
a::selection {
  background: #f3c; }

h1::-moz-selection,
h2::-moz-selection,
h3::-moz-selection,
h4::-moz-selection {
  background: #3cf;
  color: #fae368; }

h1::selection,
h2::selection,
h3::selection,
h4::selection {
  background: #3cf;
  color: #fae368; }

code {
  background: #e6e6e6;
  color: #1874a0;
  padding: 2px;
  border-radius: 2px;
  font-size: 90%; }

pre {
  padding: 0.75rem;
  display: block;
  background: #e6e6e6; }

@-webkit-keyframes rotation {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes rotation {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@-webkit-keyframes smooth {
  from {
    position: absolute;
    top: auto; }
  to {
    position: fixed;
    top: 5.775rem; } }

@keyframes smooth {
  from {
    position: absolute;
    top: auto; }
  to {
    position: fixed;
    top: 5.775rem; } }

.animate,
.button,
.header__nav,
.header__nav__wrapper,
.header cite::before,
.button--nav__inner,
.instagram__feed__item .instagram__img--caption,
.webmention cite::before {
  transition: all .4s; }

.box {
  position: relative;
  display: block;
  overflow: hidden; }
  .box::before {
    display: block;
    content: '';
    padding-top: 100%; }

.box__content {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.box--2-1::before {
  padding-top: 50%; }

.box--1-2::before {
  padding-top: 200%; }

.box--4-3::before {
  padding-top: 75%; }

.box--16-9::before {
  padding-top: 56.25%; }

.button {
  display: inline-block;
  cursor: pointer;
  outline: 0;
  border: 0; }
  .button:hover, .button:active, .button:focus {
    box-shadow: 0 0 0.25rem 0 #fff; }

.button--nav__inner, .button--nav__inner::before, .button--nav__inner::after {
  content: '';
  display: block;
  width: 30px;
  height: 3px;
  background: #f3c;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  transition: all .4s; }

.button--nav {
  outline: 0;
  border: 0;
  padding: 0;
  margin: 0;
  line-height: 1;
  background-color: transparent;
  cursor: pointer;
  display: inline-block; }

.button {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  border-radius: 3px;
  background: #3cf;
  font-weight: 600; }

@media screen and (min-width: 960px) {
  .grid {
    margin-left: -1.5rem; } }

@media screen and (min-width: 480px) {
  .grid__icon {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: row-reverse;
            flex-direction: row-reverse;
    -webkit-justify-content: flex-end;
            justify-content: flex-end; } }

@media screen and (min-width: 960px) {
  .grid__column {
    padding-left: 1.5rem;
    float: left;
    min-height: 1px; } }

@media screen and (min-width: 960px) {
  .grid--2 > .grid__column {
    width: 50%; } }

@media screen and (min-width: 960px) {
  .grid--3 > .grid__column {
    width: 33.3333%; }
    .grid--3 > .grid__column.grid__column--span {
      width: 66.6666%; }
      .grid--3 > .grid__column.grid__column--span + .grid__column {
        padding-left: 4.5rem; } }

@media screen and (min-width: 960px) {
  .grid--4 > .grid__column {
    width: 25%; }
    .grid--4 > .grid__column.grid__column--span--3 {
      width: 75%; } }

@media screen and (min-width: 960px) {
  .grid--5 > .grid__column {
    width: 20%; } }

@media screen and (min-width: 960px) {
  .grid--6 > .grid__column {
    width: 16.6666%; } }

.icon {
  position: relative;
  top: -0.0625em;
  display: inline-block;
  width: 1em;
  height: 1em;
  vertical-align: middle;
  fill: currentColor; }
  .icon--menu {
    width: 1.5rem;
    height: 1.5rem; }
  .icon--dog {
    width: 22px;
    height: 17px; }
  .icon--offline {
    margin-bottom: 3rem;
    width: 6rem;
    height: 6rem; }
    @media screen and (min-width: 480px) {
      .icon--offline {
        margin-right: 1.5rem; } }
    @media screen and (min-width: 720px) {
      .icon--offline {
        margin-right: 3rem;
        margin-bottom: 0; } }
    @media screen and (min-width: 960px) {
      .icon--offline {
        width: 9rem;
        height: 9rem; } }

.logo__image {
  display: block; }

.header__nav {
  padding-top: 3rem;
  padding-left: 3rem;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 2000;
  color: #333;
  display: none; }
  @media screen and (min-width: 960px) {
    .header__nav {
      padding-top: 0;
      padding-left: 0;
      display: block;
      bottom: auto; } }
  .header__nav--active {
    display: block; }
  .header__nav__wrapper {
    position: absolute;
    right: 0;
    left: 0;
    padding-bottom: 1.5rem;
    background: #f2f2f2; }
    @media screen and (min-width: 960px) {
      .header__nav__wrapper {
        padding-bottom: 0;
        height: 3rem; } }

.nav-main {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  margin: 0 auto;
  max-width: 1100px; }
  .nav-main__list {
    margin-bottom: 0;
    text-align: center; }
    @media screen and (min-width: 960px) {
      .nav-main__list {
        text-align: right; } }
    .nav-main__list a {
      font-size: 1.25rem;
      text-transform: uppercase;
      color: #333; }
      @media screen and (min-width: 960px) {
        .nav-main__list a:hover, .nav-main__list a:active, .nav-main__list a:focus {
          color: #1c84b6; } }
  .nav-main li {
    padding: 0.375rem; }
    @media screen and (min-width: 960px) {
      .nav-main li {
        padding-left: 0;
        padding-right: 0;
        padding-top: 0.6rem;
        padding-bottom: 0.6rem;
        display: inline-block; }
        .nav-main li + li:before {
          padding-left: 0.375rem;
          padding-right: 0.375rem;
          content: '/'; } }

.nav-footer li {
  display: inline-block; }
  .nav-footer li + li:before {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
    content: '/'; }

.content, footer {
  padding-left: 1.5rem;
  padding-top: 3rem;
  padding-right: 1.5rem;
  padding-bottom: 3rem;
  max-width: 1100px;
  margin: 0 auto; }

@media screen and (min-width: 960px) {
  .content {
    min-height: 21rem; } }

.content .card--name {
  display: none; }

footer li {
  display: inline-block; }

.zen {
  visibility: hidden;
  opacity: 0;
  transition: opacity 1s ease; }
  .no-js .zen {
    visibility: visible;
    opacity: 1; }
  .zen--active {
    visibility: visible;
    opacity: 1; }

.grid line,
.grid path {
  stroke: #666666; }

.axis text {
  fill: #fff; }

.axis line {
  stroke: #fff; }

.header {
  position: relative;
  top: auto;
  left: auto;
  background: #f2f2f2; }
  .header .header__wrapper {
    height: 3rem; }
    @media screen and (min-width: 960px) {
      .header .header__wrapper {
        position: relative;
        top: auto;
        left: auto;
        max-width: 1100px;
        margin: 0 auto; } }
    .page--home .header .header__wrapper {
      height: 12rem; }
      @media screen and (min-width: 960px) {
        .page--home .header .header__wrapper {
          height: 18rem; } }
  .header cite {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    padding-right: 1.5rem;
    padding-left: 1.5rem;
    top: 60%;
    quotes: '\201C' '\201D' '\2018' '\2019';
    width: 80%;
    font-size: 20.8px; }
    @media screen and (min-width: 720px) {
      .header cite {
        font-size: 24px; } }
    @media screen and (min-width: 960px) {
      .header cite {
        padding-right: 3rem;
        padding-left: 3rem;
        font-size: 40px; } }
    @media screen and (min-width: 1100px) {
      .header cite {
        white-space: nowrap;
        width: auto; } }
    .header cite::before {
      position: absolute;
      left: 0;
      margin-right: 0.75rem;
      content: open-quote;
      color: #333;
      -webkit-transform: scale(3);
              transform: scale(3);
      display: inline-block; }
    .header cite a {
      color: #333; }

.button--nav {
  position: absolute;
  top: 0.75rem;
  right: 0.75rem;
  z-index: 3000;
  width: 30px;
  height: 21px; }
  .button--nav strong {
    position: absolute;
    right: 40px;
    top: 0;
    font-size: 24px;
    color: #333;
    font-weight: 500; }
    @media screen and (min-width: 720px) {
      .button--nav strong {
        font-weight: 600; } }
  .button--nav__wrapper {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    z-index: 3000;
    height: 3rem;
    background: #f2f2f2; }
    @media screen and (min-width: 960px) {
      .button--nav__wrapper {
        display: none; } }

.button--nav__inner {
  content: normal;
  -webkit-transform: none;
          transform: none;
  background: #333; }
  .button--nav__inner::before {
    position: absolute;
    bottom: 0;
    left: 50%;
    background: #333; }
  .button--nav__inner::after {
    position: absolute;
    top: 0;
    left: 50%;
    background: #333; }

.button--nav--active .button--nav__inner {
  background: rgba(255, 255, 255, 0.01); }
  .button--nav--active .button--nav__inner::before {
    -webkit-transform: translateX(-55%) translateY(100%) rotate(-45deg);
            transform: translateX(-55%) translateY(100%) rotate(-45deg);
    -webkit-transform-origin: top left;
            transform-origin: top left; }
  .button--nav--active .button--nav__inner::after {
    -webkit-transform: translateX(-50%) rotate(45deg);
            transform: translateX(-50%) rotate(45deg);
    -webkit-transform-origin: top left;
            transform-origin: top left; }

.wrapper {
  display: block;
  margin-left: auto;
  margin-right: auto; }

.instagram__feed {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-justify-content: center;
          justify-content: center; }
  @media screen and (min-width: 1100px) {
    .instagram__feed {
      -webkit-justify-content: space-between;
              justify-content: space-between; } }
  .instagram__feed__item {
    margin-bottom: 1.5rem;
    -webkit-flex-grow: 1;
            flex-grow: 1;
    min-width: 200px;
    max-width: 320px; }
    @media screen and (min-width: 480px) {
      .instagram__feed__item {
        margin-right: 0.375rem;
        margin-left: 0.375rem;
        max-width: 265px; } }
    @media screen and (min-width: 720px) {
      .instagram__feed__item {
        max-width: 155px; } }
    @media screen and (min-width: 960px) {
      .instagram__feed__item {
        max-width: 228px; } }
    @media screen and (min-width: 1100px) {
      .instagram__feed__item {
        max-width: 265px; } }
    .instagram__feed__item img {
      position: relative;
      left: 50%;
      -webkit-transform: translateX(-50%);
              transform: translateX(-50%); }
      .instagram__feed__item img.instagram__img--landscape {
        max-width: none;
        height: 100%; }
      .instagram__feed__item img.instagram__img--portrait {
        max-height: none;
        width: 100%; }
    .instagram__feed__item .instagram__img--caption {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: rgba(51, 51, 51, 0.8);
      box-shadow: inset 1px 1px 40px 0 rgba(51, 51, 51, 0.45);
      opacity: 0; }
      .instagram__feed__item .instagram__img--caption:hover, .instagram__feed__item .instagram__img--caption:active, .instagram__feed__item .instagram__img--caption:focus {
        opacity: 1; }
    .instagram__feed__item .instagram__img--caption--text {
      display: block;
      margin-left: auto;
      margin-right: auto;
      padding: 1.5rem;
      font-weight: 500;
      color: #fae368; }
      .instagram__feed__item .instagram__img--caption--text::after {
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        height: 4.5rem;
        background-image: linear-gradient(180deg, rgba(255, 255, 255, 0), #333);
        display: block;
        content: ''; }

.indieweb--me {
  display: none; }
  @media screen and (min-width: 960px) {
    .indieweb--me {
      position: absolute;
      top: auto;
      display: block; }
      .indieweb--me.indieweb--me--scrolled {
        -webkit-animation: smooth .25s ease-in both;
                animation: smooth .25s ease-in both; }
      .indieweb--me a {
        min-width: 150px;
        text-align: center;
        display: block; }
      .indieweb--me img {
        display: block;
        border-radius: 75px; } }

.indieweb h1,
.indieweb p {
  font-size: 1.25rem;
  margin-bottom: 0.75rem; }

.indieweb .note {
  margin-bottom: 1.5rem;
  border-bottom: 1px solid rgba(255, 255, 255, 0.25); }
  @media screen and (min-width: 480px) {
    .indieweb .note--tags {
      position: absolute;
      right: 1.5rem; } }

.webmention {
  margin-bottom: 2.25rem; }
  .webmention--retweet, .webmention--like {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-wrap: wrap;
            flex-wrap: wrap; }
  .webmention--author {
    margin-right: 0.75rem; }
    .webmention--author img {
      width: 40px;
      height: 40px;
      border-radius: 20px; }
    .webmention--author--meta {
      display: inline-block; }
  .webmention cite {
    padding-left: 3rem;
    font-style: italic;
    quotes: '\201C' '\201D'; }
    .webmention cite::before {
      position: absolute;
      left: 0;
      margin-left: 1.875rem;
      font-size: 80%;
      content: open-quote;
      color: #fff;
      -webkit-transform: scale(3);
              transform: scale(3);
      display: inline-block; }

.note {
  position: relative;
  top: auto;
  left: auto;
  word-break: break-word; }
  @media screen and (min-width: 480px) {
    .note--tags {
      position: absolute;
      right: 0;
      top: 0; } }
  .note--meta, .note--location, .note--syndication {
    display: inline-block; }
  .note--location::after {
    content: ' – '; }
  .note--content {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    letter-spacing: .05em; }
  .note--readon {
    font-size: 0.875rem; }
  .note--featured {
    margin-top: 0.75rem;
    display: block; }
  .note--social dt,
  .note--social dd {
    display: inline-block; }
  .note--social dd {
    padding-right: 0.75rem; }
  .note p {
    margin-bottom: 0.75rem; }
  .note section {
    margin-bottom: 0; }
  .note figure {
    margin-top: 0.75rem; }

.nav-indieweb {
  padding-bottom: 0.75rem;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-justify-content: space-between;
          justify-content: space-between; }
  .nav-indieweb--above {
    margin-bottom: 0.75rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.25); }
  .nav-indieweb--below {
    padding-top: 0.75rem;
    border-top: 1px solid rgba(255, 255, 255, 0.25); }
  .nav-indieweb--next {
    margin-left: auto; }
  .nav-indieweb a {
    display: block; }

.form-indieweb {
  margin-bottom: 1.5rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem; }
  .form-indieweb label {
    padding-bottom: 0.75rem; }

/*------------------------------------*    #CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing
 * over and over in your markup.
 */
.clearfix:after,
.grid:after {
  content: "";
  display: table;
  clear: both; }

.truncate-text {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis; }

.hidden,
.form__item--scf-date,
.form__item--scf-website {
  display: none;
  visibility: hidden; }

.visuallyhidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(0 0 0 0); }
  .visuallyhidden.focusable:active, .visuallyhidden.focusable:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto; }

.invisible {
  visibility: hidden; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
